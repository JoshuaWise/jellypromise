add long stack trace tests

confirm long stack traces for aggregate methods (rejected/thrown immediately, or later in enumeration, or in handler)


optimizations for index.js to import on the server only:
- make use of private handle/resolve/reject functions, instead of using new Promise() with closures, to speed up methods and static functions.
- add optimized case for .catch() with single predicate.
- use fake promise class (e.g., PromiseArray) for optimized aggregate methods, including Promise.all.
- make sure to maintain the same long stack traces as with deoptimized versions.

test if bluebird's async implementation is faster than asap/raw



sometimes valid stack trace lines are erased due to trimming

long stack traces of warnings?

make sure all prototype methods that generate a new, linked promise, use _handleNew, _handle, or _then, so that `this` promise sets SUPPRESS_UNHANDLED_REJECTIONS to 1

add browser test via zuul, and browser support section to readme

generator (seperate module?)
