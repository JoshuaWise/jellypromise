add real tests
compare to bluebird tests

optimizations for index.js to import on the server only:
- make use of private handle/resolve/reject functions, instead of using new Promise() with closures, to speed up methods and static functions.
- add optimized case for .catch() with single predicate.
- use fake promise class (e.g., PromiseArray) for optimized aggregate methods, including Promise.all.
- make sure to maintain the same long stack traces as with deoptimized versions.

how much space would be saved in the browser if we used Promise.all for aggregate functions?

optimize asap by using a function property or argument passing instead of a closure


long stack traces of warnings?

make sure browser-production works (require('jellypromise/production') with browserify)

add hash links to README

maybe throw unhandled rejections in production mode?

make sure all prototype methods that generate a new, linked promise, use _handleNew, _handle, or then, so that `this` promise sets SUPPRESS_UNHANDLED_REJECTIONS to 1

generator (seperate module?)
